buildscript {
    ext {
        springBootVersion = '2.2.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}

subprojects {

    apply plugin: 'war'
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'


    group = 'com.github.renuevo'
    version = '0.0.0'
    sourceCompatibility = 11

    repositories {
        mavenCentral()
    }

    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if( !it.exists() ) {
                it.mkdirs()
            }
        }

        sourceSets*.resources.srcDirs*.each {
            if( !it.exists() ) {
                it.mkdirs()
            }
        }
    }

    dependencies {
        implementation group: 'com.google.guava', name: 'guava', version: '28.1-jre'
        implementation 'org.mapstruct:mapstruct:1.3.1.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
        compileOnly 'org.projectlombok:lombok:1.18.10'
        annotationProcessor 'org.projectlombok:lombok:1.18.10'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }
}

project(':spring-boot-batch-in-action'){

}

project(':spring-boot-scope-in-action'){

}

project(':spring-boot-exception-in-action'){

}

project(':spring-boot-guide-in-action'){

}

project(':spring-boot-rest-client-in-action'){

}

project(':spring-boot-jpa-in-action'){

}

project(':spring-boot-redis-in-action'){

}

project(':spring-boot-kafka-in-action'){

}

project(':spring-boot-event-in-action'){

}